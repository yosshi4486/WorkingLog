//: [Previous](@previous)

/*:
 # きょうの作業ログ　2020/08/28
 ・今日は木構造を一通り自前で実装してみようと思う。これはドメイン知識だし、CSの基礎でもある。出来れば簡易のDBまで自作できれば良いけど、できるかな。ネットワークマネージャーなど、実用のための最適化を除いた、概念だけをシンプルに実現したモデルで良い。
 
 ・月曜日からUIの実装開始できるのを目安に。パフォーマンスに問題は覚えつつも、とりあえずの実装はできたので、月曜までに解決しなかったらそのまま進めつつ、理解した時点で改善する。

 ・二分木はノードを最大2つまで持てる木構造
 */

// マークダウンの画像は、元画像のサイズを調整しないといけないので、コードで調整できる方を選択
import UIKit
UIImage(named: "BinaryTree")

//: [全二分木](BinaryTree.png)は全てのノードが2つ子を持っている木構造。
UIImage(named: "FullBinaryTree.png")

 //: 完全二分木は、全二分木を満たしつつ、全てのリーフが同じ高さの木構造。
UIImage(named: "PerfectBinaryTree.png")
 
 //: 集合関係はこのようになる
UIImage(named: "Set.png")

/*:
 ・日、週、月、年単位で振り返りできるように練習していこう。
 
 */
//: [Next](@next)
